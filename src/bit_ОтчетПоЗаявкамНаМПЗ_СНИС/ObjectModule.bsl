Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ДокументРезультат.АвтоМасштаб = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	//bt_40_0343_suyy_081215_N
	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ИспМенеджеров", ПолучитьФункциональнуюОпцию("бит_стр_ИспользоватьФункционалНазначенияМенеджеров"));
	//bt_27-0045-01_nova_021017_N
	//	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("УчетМенеджПоНГ", ПолучитьФункциональнуюОпцию("бит_стр_ИспользоватьУчетМенеджеровПоЗакупкамВРазрезеНоменклатурныхГрупп"));
	//	КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("УчетМенеджПоПодразделениям", ПолучитьФункциональнуюОпцию("бит_стр_ИспользоватьУчетМенеджеровПоЗакупкамВРазрезеПодразделений"));
	//bt_27-0045-01_nova_021017_K
	//bt_40_0343_suyy_081215_K

	//bt_04_0023_suyy_090316_N
            
	ДокументРезультат.Очистить();
	
	СтандартнаяОбработка = Ложь;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки()
																						//bt_04_0372_suyy_050416_N             
																						, ДанныеРасшифровки
																						//bt_04_0372_suyy_050416_K
																						);
	Для каждого НД Из МакетКомпоновки.СвязиНаборовДанных Цикл
		НД.ТипСвязи = ТипСвязиНаборовДанныхКомпоновкиДанных.Внешняя;	
	КонецЦикла;
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки
												//bt_04_0372_suyy_050416_N             
												, , ДанныеРасшифровки
												//bt_04_0372_suyy_050416_K
												);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	//bt_04_0023_suyy_090316_K
	
КонецПроцедуры



Функция СведенияОВнешнейОбработке() Экспорт

ПараметрыРегистрации = Новый Структура;
ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет"); 

ПараметрыРегистрации.Вставить("Наименование", "Отчет по заявкам на МПЗ (Внешний, доработанный)");
ПараметрыРегистрации.Вставить("Версия", "4.0"); 
ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь); //Варианты: Истина, Ложь
ПараметрыРегистрации.Вставить("Информация", "<Краткое описание отчета>");

ТаблицаКоманд = ПолучитьТаблицуКоманд();

ДобавитьКоманду(ТаблицаКоманд,
"Отчет по заявкам на МПЗ (Внешний, доработанный)",
"1",
"ОткрытиеФормы", //Использование. Варианты: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"
Ложь,//Показывать оповещение. Варианты Истина, Ложь
"");//Модификатор

ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

Возврат ПараметрыРегистрации;

КонецФункции

Функция ПолучитьТаблицуКоманд()

Команды = Новый ТаблицаЗначений;
Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

Возврат Команды;

КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

НоваяКоманда = ТаблицаКоманд.Добавить();
НоваяКоманда.Представление = Представление;
НоваяКоманда.Идентификатор = Идентификатор;
НоваяКоманда.Использование = Использование;
НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры 